/* tslint:disable */
/* eslint-disable */
/**
 * SpringBoot-init - version 1.0.0
 *
 * SpringBoot-init
 *
 * OpenAPI version: 3.0.1
 *
 * Contact:
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type CommonResultBoolean = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 返回数据
   */
  data?: boolean;
  /**
   * 消息提示
   */
  msg?: string;
};
export type UserUpdateReqDTO = {
  /**
   * 账号
   */
  userAccount?: string;
  /**
   * 密码
   */
  userPassword?: string;
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户头像
   */
  userAvatar?: string;
  /**
   * 用户简介
   */
  userProfile?: string;
  /**
   * 用户角色
   */
  userRole?: string;
  /**
   * id
   * [required]
   */
  id: number;
};
export type UserProfileUpdateReqDTO = {
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户头像
   */
  userAvatar?: string;
  /**
   * 用户简介
   */
  userProfile?: string;
};
export type CommonResultLong = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 返回数据
   */
  data?: number;
  /**
   * 消息提示
   */
  msg?: string;
};
export type UserRegisterReqDTO = {
  /**
   * 账号
   * [required]
   */
  userAccount: string;
  /**
   * 密码
   * [required]
   */
  userPassword: string;
  /**
   * 确认密码
   * [required]
   */
  checkPassword: string;
};
export type LoginUserVO = {
  /**
   * 用户 id
   */
  id?: number;
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户头像
   */
  userAvatar?: string;
  /**
   * 用户简介
   */
  userProfile?: string;
  /**
   * 用户角色：user/admin
   */
  userRole?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新时间
   */
  updateTime?: string;
};
export type CommonResultLoginUserVO = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 用户登录VO
   */
  data?: LoginUserVO;
  /**
   * 消息提示
   */
  msg?: string;
};
export type UserLoginReqDTO = {
  /**
   * 账号
   * [required]
   */
  userAccount: string;
  /**
   * 密码
   * [required]
   */
  userPassword: string;
};
export type UserAddReqDTO = {
  /**
   * 账号
   */
  userAccount?: string;
  /**
   * 密码
   */
  userPassword?: string;
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户头像
   */
  userAvatar?: string;
  /**
   * 用户简介
   */
  userProfile?: string;
  /**
   * 用户角色
   */
  userRole?: string;
};
export type CommonResultString = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 返回数据
   */
  data?: string;
  /**
   * 消息提示
   */
  msg?: string;
};
export type UserPageReqDTO = {
  /**
   * 页码，从 1 开始
   * [required]
   */
  pageNo: number;
  /**
   * 每页条数，最大值为 100
   * [required]
   */
  pageSize: number;
  /**
   * id
   */
  id?: number;
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户角色
   */
  userRole?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 开放平台id
   */
  unionId?: string;
  /**
   * 公众号openId
   */
  mpOpenId?: string;
};
export type UserVo = {
  /**
   * id
   */
  id?: number;
  /**
   * 账号
   */
  userAccount?: string;
  /**
   * 密码
   */
  userPassword?: string;
  /**
   * 微信开放平台id
   */
  unionId?: string;
  /**
   * 公众号openId
   */
  mpOpenId?: string;
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户头像
   */
  userAvatar?: string;
  /**
   * 用户简介
   */
  userProfile?: string;
  /**
   * 用户角色：user/admin
   */
  userRole?: string;
  /**
   * 用户状态（0正常 1停用）
   */
  userStatus?: number;
};
export type PageResultUserVo = {
  /**
   * 数据
   * [required]
   */
  list: UserVo[];
  /**
   * 总量
   * [required]
   */
  total: number;
};
export type CommonResultPageResultUserVo = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 分页结果类
   */
  data?: PageResultUserVo;
  /**
   * 消息提示
   */
  msg?: string;
};
export type CommonResultUserVo = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 用户VO
   */
  data?: UserVo;
  /**
   * 消息提示
   */
  msg?: string;
};
export type UserSimpleVo = {
  /**
   * id
   */
  id?: number;
  /**
   * 用户昵称
   */
  userName?: string;
  /**
   * 用户头像
   */
  userAvatar?: string;
  /**
   * 用户简介
   */
  userProfile?: string;
  /**
   * 用户角色：user/admin/ban
   */
  userRole?: string;
  /**
   * 创建时间
   */
  createTime?: string;
};
export type CommonResultUserSimpleVo = {
  /**
   * 业务状态
   */
  code?: number;
  /**
   * 用户简要信息VO
   */
  data?: UserSimpleVo;
  /**
   * 消息提示
   */
  msg?: string;
};
declare global {
  interface Apis {
    general: {
      /**
       * ---
       *
       * [PUT] 更新用户信息
       *
       * **path:** /user/update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 账号
       *   userAccount?: string
       *   // 密码
       *   userPassword?: string
       *   // 用户昵称
       *   userName?: string
       *   // 用户头像
       *   userAvatar?: string
       *   // 用户简介
       *   userProfile?: string
       *   // 用户角色
       *   userRole?: string
       *   // id
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: boolean
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      updateUser<
        Config extends Alova2MethodConfig<CommonResultBoolean> & {
          data: UserUpdateReqDTO;
        }
      >(
        config: Config
      ): Alova2Method<CommonResultBoolean, 'general.updateUser', Config>;
      /**
       * ---
       *
       * [PUT] 修改个人信息
       *
       * **path:** /user/update/profile
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 用户昵称
       *   userName?: string
       *   // 用户头像
       *   userAvatar?: string
       *   // 用户简介
       *   userProfile?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: boolean
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      updateProfile<
        Config extends Alova2MethodConfig<CommonResultBoolean> & {
          data: UserProfileUpdateReqDTO;
        }
      >(
        config: Config
      ): Alova2Method<CommonResultBoolean, 'general.updateProfile', Config>;
      /**
       * ---
       *
       * [POST] 用户注册
       *
       * **path:** /user/register
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 账号
       *   // [required]
       *   userAccount: string
       *   // 密码
       *   // [required]
       *   userPassword: string
       *   // 确认密码
       *   // [required]
       *   checkPassword: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: number
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      userRegister<
        Config extends Alova2MethodConfig<CommonResultLong> & {
          data: UserRegisterReqDTO;
        }
      >(
        config: Config
      ): Alova2Method<CommonResultLong, 'general.userRegister', Config>;
      /**
       * ---
       *
       * [POST] 用户登录
       *
       * **path:** /user/login
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 账号
       *   // [required]
       *   userAccount: string
       *   // 密码
       *   // [required]
       *   userPassword: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 用户登录VO
       *   data?: {
       *     // 用户 id
       *     id?: number
       *     // 用户昵称
       *     userName?: string
       *     // 用户头像
       *     userAvatar?: string
       *     // 用户简介
       *     userProfile?: string
       *     // 用户角色：user/admin
       *     userRole?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新时间
       *     updateTime?: string
       *   }
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      userLogin<
        Config extends Alova2MethodConfig<CommonResultLoginUserVO> & {
          data: UserLoginReqDTO;
        }
      >(
        config: Config
      ): Alova2Method<CommonResultLoginUserVO, 'general.userLogin', Config>;
      /**
       * ---
       *
       * [POST] 创建用户
       *
       * **path:** /user/add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 账号
       *   userAccount?: string
       *   // 密码
       *   userPassword?: string
       *   // 用户昵称
       *   userName?: string
       *   // 用户头像
       *   userAvatar?: string
       *   // 用户简介
       *   userProfile?: string
       *   // 用户角色
       *   userRole?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: number
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      addUser<
        Config extends Alova2MethodConfig<CommonResultLong> & {
          data: UserAddReqDTO;
        }
      >(
        config: Config
      ): Alova2Method<CommonResultLong, 'general.addUser', Config>;
      /**
       * ---
       *
       * [POST] 文件上传
       *
       * **path:** /file/upload
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 业务枚举
       *   // [required]
       *   biz: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 上传的文件
       *   // [required]
       *   file: Blob
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: string
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      uploadFile<
        Config extends Alova2MethodConfig<CommonResultString> & {
          params: {
            /**
             * 业务枚举
             * [required]
             */
            biz: string;
          };
          data: {
            /**
             * 上传的文件
             * [required]
             */
            file: Blob;
          };
        }
      >(
        config: Config
      ): Alova2Method<CommonResultString, 'general.uploadFile', Config>;
      /**
       * ---
       *
       * [GET] 分页获取用户列表
       *
       * **path:** /user/page
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 用户分页请求
       *   // [required]
       *   userPageReqDTO: {
       *     // 页码，从 1 开始
       *     // [required]
       *     pageNo: number
       *     // 每页条数，最大值为 100
       *     // [required]
       *     pageSize: number
       *     // id
       *     id?: number
       *     // 用户昵称
       *     userName?: string
       *     // 用户角色
       *     userRole?: string
       *     // 创建时间
       *     createTime?: string
       *     // 开放平台id
       *     unionId?: string
       *     // 公众号openId
       *     mpOpenId?: string
       *   }
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 分页结果类
       *   data?: {
       *     // 数据
       *     // [required]
       *     list: Array<{
       *       // id
       *       id?: number
       *       // 账号
       *       userAccount?: string
       *       // 密码
       *       userPassword?: string
       *       // 微信开放平台id
       *       unionId?: string
       *       // 公众号openId
       *       mpOpenId?: string
       *       // 用户昵称
       *       userName?: string
       *       // 用户头像
       *       userAvatar?: string
       *       // 用户简介
       *       userProfile?: string
       *       // 用户角色：user/admin
       *       userRole?: string
       *       // 用户状态（0正常 1停用）
       *       userStatus?: number
       *     }>
       *     // 总量
       *     // [required]
       *     total: number
       *   }
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      getUserPage<
        Config extends Alova2MethodConfig<CommonResultPageResultUserVo> & {
          params: {
            /**
             * 用户分页请求
             * [required]
             */
            userPageReqDTO: UserPageReqDTO;
          };
        }
      >(
        config: Config
      ): Alova2Method<CommonResultPageResultUserVo, 'general.getUserPage', Config>;
      /**
       * ---
       *
       * [GET] 获取用户
       *
       * **path:** /user/get
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 用户ID
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 用户VO
       *   data?: {
       *     // id
       *     id?: number
       *     // 账号
       *     userAccount?: string
       *     // 密码
       *     userPassword?: string
       *     // 微信开放平台id
       *     unionId?: string
       *     // 公众号openId
       *     mpOpenId?: string
       *     // 用户昵称
       *     userName?: string
       *     // 用户头像
       *     userAvatar?: string
       *     // 用户简介
       *     userProfile?: string
       *     // 用户角色：user/admin
       *     userRole?: string
       *     // 用户状态（0正常 1停用）
       *     userStatus?: number
       *   }
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      getUser<
        Config extends Alova2MethodConfig<CommonResultUserVo> & {
          params: {
            /**
             * 用户ID
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<CommonResultUserVo, 'general.getUser', Config>;
      /**
       * ---
       *
       * [GET] 获取用户
       *
       * **path:** /user/get/vo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 用户ID
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 用户简要信息VO
       *   data?: {
       *     // id
       *     id?: number
       *     // 用户昵称
       *     userName?: string
       *     // 用户头像
       *     userAvatar?: string
       *     // 用户简介
       *     userProfile?: string
       *     // 用户角色：user/admin/ban
       *     userRole?: string
       *     // 创建时间
       *     createTime?: string
       *   }
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      getUserVO<
        Config extends Alova2MethodConfig<CommonResultUserSimpleVo> & {
          params: {
            /**
             * 用户ID
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<CommonResultUserSimpleVo, 'general.getUserVO', Config>;
      /**
       * ---
       *
       * [GET] 获取当前登录用户
       *
       * **path:** /user/get/login
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 用户登录VO
       *   data?: {
       *     // 用户 id
       *     id?: number
       *     // 用户昵称
       *     userName?: string
       *     // 用户头像
       *     userAvatar?: string
       *     // 用户简介
       *     userProfile?: string
       *     // 用户角色：user/admin
       *     userRole?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新时间
       *     updateTime?: string
       *   }
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      getLoginUser<Config extends Alova2MethodConfig<CommonResultLoginUserVO>>(
        config?: Config
      ): Alova2Method<CommonResultLoginUserVO, 'general.getLoginUser', Config>;
      /**
       * ---
       *
       * [DELETE] 注销
       *
       * **path:** /user/logout
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: boolean
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      logout<Config extends Alova2MethodConfig<CommonResultBoolean>>(
        config?: Config
      ): Alova2Method<CommonResultBoolean, 'general.logout', Config>;
      /**
       * ---
       *
       * [DELETE] 删除用户
       *
       * **path:** /user/delete
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 用户ID
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 业务状态
       *   code?: number
       *   // 返回数据
       *   data?: boolean
       *   // 消息提示
       *   msg?: string
       * }
       * ```
       */
      deleteUser<
        Config extends Alova2MethodConfig<CommonResultBoolean> & {
          params: {
            /**
             * 用户ID
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<CommonResultBoolean, 'general.deleteUser', Config>;
    };
  }

  var Apis: Apis;
}
